/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.Sms.view;

import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lk.ijse.Sms.Controller.AllRegistrationDetailSController;
import lk.ijse.Sms.Controller.BatchController;
import lk.ijse.Sms.Controller.RegistrationController;
import lk.ijse.Sms.Controller.StudentController;
import lk.ijse.Sms.Modal.Batches;
import lk.ijse.Sms.Modal.Registration;
import lk.ijse.Sms.Modal.Student;

/**
 *
 * @author Rukz
 */
public class AddRegistration extends javax.swing.JPanel {

    /**
     * Creates new form AddRegistration
     */
    public AddRegistration() {
        initComponents();
        genarateRegistrationID();
        loadSid();
        loadBid();
        loadAllRegistration();
        
        
         Date date = new Date();
        String formatDate = formatDate(date);
        txtRegDate.setText(formatDate);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtRegistration = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtRegDate = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtRegFee = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        cmbSid = new javax.swing.JComboBox<>();
        cmbBID = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtRfresh3 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(236, 240, 241));
        setForeground(new java.awt.Color(0, 0, 0));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtRegistration.setBackground(java.awt.Color.white);
        txtRegistration.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txtRegistration.setForeground(new java.awt.Color(51, 51, 51));
        txtRegistration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRegistrationActionPerformed(evt);
            }
        });
        add(txtRegistration, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 220, 40));

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("RID (registration id)");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 110, 20));

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("SID (student id)");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 80, 110, 20));

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("BID (batch id)");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 110, 20));

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("REGISTRATION  DATE (year-month-date)");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 170, 230, 20));

        txtRegDate.setBackground(java.awt.Color.white);
        txtRegDate.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txtRegDate.setForeground(new java.awt.Color(51, 51, 51));
        add(txtRegDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 190, 230, 40));

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("REGISTRATION  FEE");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 110, 20));

        txtRegFee.setBackground(java.awt.Color.white);
        txtRegFee.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txtRegFee.setForeground(new java.awt.Color(51, 51, 51));
        add(txtRegFee, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 220, 40));

        jButton1.setBackground(new java.awt.Color(46, 204, 113));
        jButton1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton1.setForeground(java.awt.Color.black);
        jButton1.setText("SAVE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 100, 120, 40));

        jButton2.setBackground(new java.awt.Color(231, 76, 60));
        jButton2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton2.setForeground(java.awt.Color.black);
        jButton2.setText("DELETE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 180, 120, 40));

        jButton3.setBackground(new java.awt.Color(41, 128, 185));
        jButton3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 0, 0));
        jButton3.setText("UPDATE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 260, 120, 40));

        cmbSid.setBackground(java.awt.Color.white);
        cmbSid.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        cmbSid.setForeground(new java.awt.Color(0, 0, 0));
        add(cmbSid, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 100, 230, 40));

        cmbBID.setBackground(java.awt.Color.white);
        cmbBID.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        add(cmbBID, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 220, 40));

        jPanel1.setBackground(new java.awt.Color(155, 89, 182));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Bahnschrift", 1, 24)); // NOI18N
        jLabel5.setForeground(java.awt.Color.white);
        jLabel5.setText("Students  Registrations");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 400, 40));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1090, 40));

        jTable1.setBackground(java.awt.Color.white);
        jTable1.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jTable1.setForeground(java.awt.Color.black);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Rid", "Sid", "Bid", "reg_date", "reg_fee"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 760, 230));

        txtRfresh3.setBackground(new java.awt.Color(211, 84, 0));
        txtRfresh3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txtRfresh3.setForeground(new java.awt.Color(0, 0, 0));
        txtRfresh3.setText("REFRESH");
        txtRfresh3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRfresh3ActionPerformed(evt);
            }
        });
        add(txtRfresh3, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 610, 110, 40));

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/Sms/view/icons8-ok-50.png"))); // NOI18N
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 90, 50, 60));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/Sms/view/icons8-delete-50.png"))); // NOI18N
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 170, 50, 60));

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/Sms/view/icons8-synchronize-45.png"))); // NOI18N
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 250, 50, 60));
    }// </editor-fold>//GEN-END:initComponents

    private void txtRegistrationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRegistrationActionPerformed

        if(txtRegistration.getText().trim().length()>0){

            try {

                Registration OBj=new RegistrationController().getRegistration(txtRegistration.getText().trim());

                if(OBj!=null){
                    cmbSid.setSelectedItem(OBj.getSid());
                    cmbBID.setSelectedItem(OBj.getBid());
                    txtRegDate.setText(OBj.getReg_date());
                    txtRegFee.setText(OBj.getReg_fee());
                }else{
                    JOptionPane.showMessageDialog(this,"No Results Fount","Warning",JOptionPane.WARNING_MESSAGE);
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(AddRegistration.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(AddRegistration.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(this,"Try Again","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtRegistrationActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        try {
            String rid=txtRegistration.getText();
            String sid= cmbSid.getSelectedItem().toString();
            String bid= cmbBID.getSelectedItem().toString();
            String reg_date=txtRegDate.getText();
            String reg_fee=txtRegFee.getText();

            Registration r1=new Registration(rid, sid, bid, reg_date, reg_fee);
            boolean isSaved=new RegistrationController().savePatient(r1);
            if(isSaved){
                JOptionPane.showMessageDialog(null,"Saved");
            }else{
                JOptionPane.showMessageDialog(null,"Try Again","Error",JOptionPane.ERROR_MESSAGE);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddRegistration.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(txtRegistration.getText().trim().length()>0){

            try {
                if(new RegistrationController().dropStudent(txtRegistration.getText().trim())){
                    JOptionPane.showMessageDialog(null,"Deleted");
                }else{
                    JOptionPane.showMessageDialog(null,"Something Went Wrong","Warning",JOptionPane.WARNING_MESSAGE);
                }

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(StudentManage.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(StudentManage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(this,"Please insert an SID","ERROR",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if(txtRegistration.getText().trim().length()>0){
            try {
                String rid=txtRegistration.getText();
                String sid= cmbSid.getSelectedItem().toString();
                String bid= cmbBID.getSelectedItem().toString();
                String date=txtRegDate.getText();
                String fee=txtRegFee.getText();

                Registration r1=new Registration(rid, sid, bid, date, fee);

                if(new RegistrationController().updateState(r1)){
                    JOptionPane.showMessageDialog(null,"Success");
                }else{
                    JOptionPane.showMessageDialog(null,"Please Try Again","WARNING",JOptionPane.WARNING_MESSAGE);
                }

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(StudentManage.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(StudentManage.class.getName()).log(Level.SEVERE, null, ex);
            }

        }else{
            JOptionPane.showMessageDialog(null,"Please Insert An SID","ERROR",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txtRfresh3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRfresh3ActionPerformed
        try {
            List<Registration> SubjectList= new RegistrationController().getAllRegistrations();
            DefaultTableModel modal=(DefaultTableModel) jTable1.getModel();
            modal.setRowCount(0);
            for(Registration sub:SubjectList){
                Object[] rowData={
                   sub.getRid(),
                   sub.getSid(),
                   sub.getBid(),
                   sub.getReg_date(),
                   sub.getReg_fee()};

                modal.addRow(rowData);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddSubjects.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddSubjects.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtRfresh3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbBID;
    private javax.swing.JComboBox<String> cmbSid;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtRegDate;
    private javax.swing.JTextField txtRegFee;
    private javax.swing.JTextField txtRegistration;
    private javax.swing.JButton txtRfresh3;
    // End of variables declaration//GEN-END:variables

    private void genarateRegistrationID() {
         try {
            String regID = RegistrationController.generateregID();
            txtRegistration.setText(regID);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddCourses.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddCourses.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void loadSid() {
       try {
            ArrayList<Student> AllCourses=StudentController.getAllStudents();
            for(Student student:AllCourses){
                cmbSid.addItem(student.getSid());
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddBatches.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddBatches.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadBid() {
        try {
            ArrayList<Batches> AllBatches=BatchController.getAllBid();
            for(Batches batch:AllBatches){
                cmbBID.addItem(batch.getBid());
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddBatches.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddBatches.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private String formatDate(Date date) {
         SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        return sdf.format(date);
    }

    private void loadAllRegistration() {
        
       
        try {
            List<Registration> RegistrationList= new AllRegistrationDetailSController().getAllRegistration();
            DefaultTableModel modal=(DefaultTableModel)jTable1.getModel();
            for(Registration tempRegistration:RegistrationList){
                
                modal.addRow(new Object[]{
                
                    tempRegistration.getRid(),
                    tempRegistration.getSid(),
                    tempRegistration.getBid(),
                    tempRegistration.getReg_date(),
                    tempRegistration.getReg_fee(),
                    
                
                });
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddRegistration.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
            
       
    
        
    }
}
