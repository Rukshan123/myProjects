/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.Sms.view;

import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lk.ijse.Sms.Controller.AllAttendanceController;
import lk.ijse.Sms.Controller.AttendanceController;
import lk.ijse.Sms.Controller.RegistrationController;
import lk.ijse.Sms.Controller.SemesterController;
import lk.ijse.Sms.Modal.Attendance;
import lk.ijse.Sms.Modal.Registration;
import lk.ijse.Sms.Modal.Semester;


/**
 *
 * @author Rukz
 */
public class AttendanceMarks extends javax.swing.JPanel {

    /**
     * Creates new form AttendanceMarks
     */
    public AttendanceMarks() {
        initComponents();
        genarateAttendanceID();
        loadRid();
        loadAllAttendance();
        loadSemesterId();
      
        Date date = new Date();
        String formatDate = formatDate(date);
        txtDate.setText(formatDate);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        txtAid = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtInTime = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtOutTime = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        cmbRID = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JtableAttendance = new javax.swing.JTable();
        txtRfresh3 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cmbSemID = new javax.swing.JComboBox<>();
        cmbDetails = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(236, 240, 241));
        setForeground(new java.awt.Color(0, 0, 0));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("AID (Attendance ID)");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 120, 20));

        txtAid.setBackground(java.awt.Color.white);
        txtAid.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txtAid.setForeground(new java.awt.Color(51, 51, 51));
        txtAid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAidActionPerformed(evt);
            }
        });
        add(txtAid, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 220, 40));

        jLabel2.setBackground(java.awt.Color.white);
        jLabel2.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("RID (Registration id)");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 70, 120, 30));

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("SEMID (Semester ID");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 120, 20));

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("IN TIME");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 160, 120, 20));

        txtInTime.setBackground(java.awt.Color.white);
        txtInTime.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txtInTime.setForeground(new java.awt.Color(0, 0, 0));
        add(txtInTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 180, 220, 40));

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("OUT TIME");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 120, 20));

        txtOutTime.setBackground(java.awt.Color.white);
        txtOutTime.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txtOutTime.setForeground(new java.awt.Color(51, 51, 51));
        txtOutTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOutTimeActionPerformed(evt);
            }
        });
        add(txtOutTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 220, 40));

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("DATE (year-month-day)");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 240, 130, 20));

        txtDate.setBackground(java.awt.Color.white);
        txtDate.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txtDate.setForeground(new java.awt.Color(51, 51, 51));
        txtDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateActionPerformed(evt);
            }
        });
        add(txtDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 260, 220, 40));

        jLabel15.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 0));
        jLabel15.setText("DETAILS");
        add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 120, 20));

        btnSave.setBackground(new java.awt.Color(46, 204, 113));
        btnSave.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnSave.setForeground(new java.awt.Color(0, 0, 0));
        btnSave.setText("SAVE");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 100, 100, 40));

        btnDelete.setBackground(new java.awt.Color(231, 76, 60));
        btnDelete.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(0, 0, 0));
        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 180, 100, 40));

        btnUpdate.setBackground(new java.awt.Color(41, 128, 185));
        btnUpdate.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(0, 0, 0));
        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 260, 100, 40));

        cmbRID.setBackground(java.awt.Color.white);
        cmbRID.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        cmbRID.setForeground(new java.awt.Color(0, 0, 0));
        add(cmbRID, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 100, 220, 40));

        jPanel1.setBackground(new java.awt.Color(155, 89, 182));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(java.awt.Color.white);
        jLabel1.setFont(new java.awt.Font("Bahnschrift", 1, 24)); // NOI18N
        jLabel1.setForeground(java.awt.Color.white);
        jLabel1.setText("Students Attendance");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 270, 40));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 40));

        JtableAttendance.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        JtableAttendance.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Attendane ID", "Registration ID", "Semester ID", "In Time", "Out Time", "Date", "Details"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(JtableAttendance);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 390, 960, 220));

        txtRfresh3.setBackground(new java.awt.Color(211, 84, 0));
        txtRfresh3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txtRfresh3.setForeground(new java.awt.Color(0, 0, 0));
        txtRfresh3.setText("REFRESH");
        txtRfresh3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRfresh3ActionPerformed(evt);
            }
        });
        add(txtRfresh3, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 630, 110, 40));

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/Sms/view/icons8-ok-50.png"))); // NOI18N
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 90, 50, 60));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/Sms/view/icons8-delete-50.png"))); // NOI18N
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 170, 50, 60));

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/Sms/view/icons8-synchronize-45.png"))); // NOI18N
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 250, 50, 60));

        cmbSemID.setBackground(java.awt.Color.white);
        cmbSemID.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        cmbSemID.setForeground(new java.awt.Color(0, 0, 0));
        add(cmbSemID, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 220, 40));

        cmbDetails.setBackground(java.awt.Color.white);
        cmbDetails.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        cmbDetails.setForeground(new java.awt.Color(0, 0, 0));
        cmbDetails.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Present", "Absent" }));
        add(cmbDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, 220, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void txtAidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAidActionPerformed
        if(txtAid.getText().trim().length()>0){
            try {
                Attendance OBj=new AttendanceController().getAttendance(txtAid.getText().trim());

                if(OBj!=null){
                    cmbRID.setSelectedItem(OBj.getRid());
                    cmbSemID.setSelectedItem(OBj.getSemid());
                    txtInTime.setText(OBj.getIn_time());
                    txtOutTime.setText(OBj.getOut_time());
                    txtDate.setText(OBj.getAtt_date());
                    cmbDetails.setSelectedItem(OBj.getDetails());
                  

                }else{
                    JOptionPane.showMessageDialog(this,"No Results Fount","Warning",JOptionPane.WARNING_MESSAGE);
                }

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(StudentManage.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(StudentManage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(this,"Try Again","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtAidActionPerformed

    private void txtOutTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOutTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOutTimeActionPerformed

    private void txtDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDateActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        
        try {
            String aid=txtAid.getText();
            String rid= cmbRID.getSelectedItem().toString();
            String semid=cmbSemID.getSelectedItem().toString();
            String in_time=txtInTime.getText();
            String out_time=txtOutTime.getText();
            String att_date=txtDate.getText();
            String details=cmbDetails.getSelectedItem().toString();
            
            Attendance a1=new Attendance(aid, rid, semid, in_time, out_time, att_date, details);
           

            boolean isSaved ;
            
                isSaved = new AttendanceController().saveAttendance(a1);
                        
             
                
           

            if(isSaved){
                JOptionPane.showMessageDialog(null,"Saved");
            }else{
                JOptionPane.showMessageDialog(null,"Try Again","Error",JOptionPane.ERROR_MESSAGE);
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(StudentManage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(StudentManage.class.getName()).log(Level.SEVERE, null, ex);
        }

        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if(txtAid.getText().trim().length()>0){

            try {
                if(new AttendanceController().dropAttendance(txtAid.getText().trim())){
                    JOptionPane.showMessageDialog(null,"Deleted");
                }else{
                    JOptionPane.showMessageDialog(null,"Something Went Wrong","Warning",JOptionPane.WARNING_MESSAGE);
                }

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(StudentManage.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(StudentManage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(this,"Please insert an SID","ERROR",JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed

        
        if(txtAid.getText().trim().length()>0){
            try {
                String aid=txtAid.getText();
                String rid= cmbRID.getSelectedItem().toString();
                String semid=cmbSemID.getSelectedItem().toString();
                String in_time=txtInTime.getText();
                String out_time=txtOutTime.getText();
                String date=txtDate.getText();
                String details=cmbDetails.getSelectedItem().toString();
                

                
                Attendance a1=new Attendance(aid, rid, semid, in_time, out_time, date, details);

                if(new AttendanceController().updateAttendance(a1)){
                    JOptionPane.showMessageDialog(null,"Success");
                }else{
                    JOptionPane.showMessageDialog(null,"Please Try Again","WARNING",JOptionPane.WARNING_MESSAGE);
                }

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(StudentManage.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(StudentManage.class.getName()).log(Level.SEVERE, null, ex);
            }

        }else{
            JOptionPane.showMessageDialog(null,"Please Insert An SID","ERROR",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtRfresh3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRfresh3ActionPerformed
        try {
            List<Attendance> SubjectList= new AttendanceController().getAllAttendance();
            DefaultTableModel modal=(DefaultTableModel) JtableAttendance.getModel();
            modal.setRowCount(0);
            for(Attendance sub:SubjectList){
                Object[] rowData={
                    sub.getAid(),
                    sub.getRid(),
                    sub.getSemid(),
                    sub.getIn_time(),
                    sub.getOut_time(),
                    sub.getAtt_date(),
                    sub.getDetails()};

                modal.addRow(rowData);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddSubjects.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddSubjects.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtRfresh3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JtableAttendance;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbDetails;
    private javax.swing.JComboBox<String> cmbRID;
    private javax.swing.JComboBox<String> cmbSemID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtAid;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtInTime;
    private javax.swing.JTextField txtOutTime;
    private javax.swing.JButton txtRfresh3;
    // End of variables declaration//GEN-END:variables

    private void genarateAttendanceID() {
          try {
            String AID = AttendanceController.generateAID();
            txtAid.setText(AID);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddCourses.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddCourses.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void loadRid() {
        try {
            ArrayList<Registration> AllCourses=RegistrationController.getAllRegistrations();
            for(Registration reg:AllCourses){
                cmbRID.addItem(reg.getRid());
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddBatches.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddBatches.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private String formatDate(Date date) {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        return sdf.format(date);
    }

    private void loadAllAttendance() {
         
        try {
            List<Attendance> AttendanceList= new AllAttendanceController().getAttendances();
            DefaultTableModel modal=(DefaultTableModel)JtableAttendance.getModel();
            for(Attendance tempAttendance:AttendanceList){
                
                modal.addRow(new Object[]{
                
                    tempAttendance.getAid(),
                    tempAttendance.getRid(),
                    tempAttendance.getSemid(),
                    tempAttendance.getIn_time(),
                    tempAttendance.getOut_time(),
                    tempAttendance.getAtt_date(),
                    tempAttendance.getDetails(),
                    
                    
                
                });
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AttendanceMarks.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AttendanceMarks.class.getName()).log(Level.SEVERE, null, ex);
        }
        
            
            
        
    
    }

    private void loadSemesterId() {
     try {
            ArrayList<Semester> AllSemesters=SemesterController.getAllSemesters();
            for(Semester sem:AllSemesters){
                cmbSemID.addItem(sem.getSemid());
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddBatches.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddBatches.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }

}
